stages:
  - build
  - test
  - deploy

build:
  image: docker:latest

  stage: build

  services:
    - docker:dind

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

test:
  image: node:9-alpine

  stage: test

  before_script:
    - apk update
    - apk add bash python make g++ openssh openssl
    - npm install -g pm2 pnpm
    - pnpm run setup

  script: echo "no test specified"

deploy:
  image: alpine:latest

  stage: deploy

  before_script:
    - apk update
    - apk add openssh bash
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - bash -c "ssh-add <(echo '$SSH_PRIVATE_KEY')"
    - ssh-keyscan "$HOST" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - ssh $USER@$HOST "docker login -u '$CI_REGISTRY_USER' -p '$CI_REGISTRY_PASSWORD' $CI_REGISTRY && docker pull $CI_REGISTRY_IMAGE && bash -c 'docker rm -f $CI_PROJECT_PATH_SLUG || true' && docker run --name  $CI_PROJECT_PATH_SLUG $CI_REGISTRY_IMAGE"
